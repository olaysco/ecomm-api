{
  "swagger": "2.0",
  "info": {
    "description": "Ecomm Products API",
    "version": "1.0.0",
    "title": "Product API"
  },
  "basePath": "/api",
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get a list of products",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return (default: 10)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Field to sort by (default: createdAt)",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Sort order (default: desc)",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Filter by product brand",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by product name",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Filter by product slug",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "Filter by product price",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                },
                "count": {
                  "type": "integer"
                },
                "currentPage": {
                  "type": "integer"
                },
                "limit": {
                  "type": "integer"
                },
                "next": {
                  "type": "string"
                },
                "previous": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving products",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Error retrieving products",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Error creating new product",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a single product",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "404": {
            "description": "Error product with ID not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unexpected error retrieving product",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Update an existing product",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "body",
            "description": "Product object to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Error updating product",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unexpected error updating product",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product by ID",
        "tags": [
          "Product"
        ],
        "description": "Deletes a product with the specified ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Error deleting product",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "The unique identifier of the product"
        },
        "name": {
          "type": "string",
          "description": "The name of the product"
        },
        "brand": {
          "type": "string",
          "description": "The brand of the product"
        },
        "price": {
          "type": "number",
          "description": "The price of the product"
        },
        "weight": {
          "type": "number",
          "description": "The weight of the product"
        },
        "height": {
          "type": "number",
          "description": "The height of the product"
        },
        "description": {
          "type": "string",
          "description": "A description of the product"
        },
        "slug": {
          "type": "string",
          "description": "The producr unique slug"
        }
      }
    },
    "ProductInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the product"
        },
        "brand": {
          "type": "string",
          "description": "The brand of the product"
        },
        "price": {
          "type": "number",
          "description": "The price of the product"
        },
        "weight": {
          "type": "number",
          "description": "The weight of the product"
        },
        "height": {
          "type": "number",
          "description": "The height of the product"
        },
        "description": {
          "type": "string",
          "description": "A description of the product"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/Product"
        }
      }
    }
  }
}